# Configuration for Nginx server
http {
    server {
        listen 80;
        server_name localhost;

        # Redirect HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;

        # SSL configuration options (adjust as needed)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:kEDH-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-CBC-SHA:ECDHE-RSA-AES256-CBC-SHA:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-CBC-SHA:DHE-DSS-AES256-CBC-SHA:kEDH-RSA-AES256-CBC-SHA:ECDHE-ECDSA-AES128-CBC-SHA:ECDHE-RSA-AES128-CBC-SHA:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-CBC-SHA:DHE-DSS-AES128-CBC-SHA:kEDH-RSA-AES128-CBC-SHA";
        ssl_prefer_server_ciphers on;
        ssl_session_cache "shared:SSL:10m"
        ssl_session_timeout 10m;
        ssl_dhparam /etc/nginx/certs/dhparam.pem;

        # Add your application's server blocks here
    }
}